from sklearn.datasets import make_blobs, load_iris, load_wine
from sklearn.preprocessing import StandardScaler

import numpy as np
from ml_from_scratch.algorithms import KMeans
from examples.utils.plotting_regression_and_classification import plot_classification_unsupervised


def test_k_means():
    """
    Test the KMeans implementation using a synthetic dataset generated by sklearn.
    """
    # Generate a sample dataset with 4 clusters
    data = load_wine()
    X, y = data.data, data.target
    X = StandardScaler().fit_transform(X)

    # Initialize and fit the KMeans algorithm
    num_clusters = 3
    kmeans = KMeans(num_clusters=num_clusters, max_iterations=300, distance_metric="euclidean")
    predictions = kmeans.fit_predict(X)

    # Plot the results
    plot_classification_unsupervised(
        X, y, predictions,
        ltitle="KMeans Clustering Results\n(PCA Reduced)", rtitle="Ground Truth Clustering\n(PCA Reduced)",
        xlabel="", ylabel=""
    )



if __name__ == '__main__':
    print('Testing K-Means Algorithm')
    test_k_means()
